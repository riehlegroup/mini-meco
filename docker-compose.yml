services:
  server:
    build:
      context: .
      dockerfile: Dockerfile.server
    environment:
      NODE_ENV: production
      PORT: 3000
      CLIENT_URL: ${CLIENT_URL}
      DB_PATH: ${DB_PATH}
      JWT_SECRET: ${JWT_SECRET}
      EMAIL_USER_FAU: ${EMAIL_USER_FAU}
      EMAIL_PASS_FAU: ${EMAIL_PASS_FAU}
    volumes:
      - mini-meco-db:/app/server/data
    restart: unless-stopped
    networks:
      - app-network

  caddy:
    image: caddy:2-alpine
    ports:
      - "80:80"
      - "443:443"
    environment:
      DOMAIN: ${DOMAIN:-localhost}
      ACME_EMAIL: ${ACME_EMAIL:-}
    volumes:
      # Caddy configuration
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      # Frontend static files (from client build)
      - client-dist:/srv:ro
      # Caddy data for certificates and config persistence
      - caddy-data:/data
      - caddy-config:/config
    depends_on:
      - server
      - client
    restart: unless-stopped
    networks:
      - app-network

  client:
    build:
      context: .
      dockerfile: Dockerfile.client
      args:
        VITE_API_URL: ${VITE_API_URL}
        VITE_GITHUB_TOKEN: ${VITE_GITHUB_TOKEN}
    volumes:
      - client-dist:/dist
    # Container exits immediately after copying files to volume (expected behavior)
    restart: "no"

volumes:
  mini-meco-db:
  caddy-data:
  caddy-config:
  client-dist:

networks:
  app-network:
    driver: bridge
